package ecoji

import (
	"bufio"
	"fmt"
	"os"
	"testing"
)

func TestMakrdown(t *testing.T) {

	f, err := os.Create("docs/emojis.md")
	if err != nil {
		t.Error(err)
	}
	defer f.Close()

	writer := bufio.NewWriter(f)
	defer writer.Flush()

	fmt.Fprintln(writer, "# Emojis used by Ecoji")

	fmt.Fprintln(writer)
	fmt.Fprintln(writer, "<!-- This file is automatically generated -->")
	fmt.Fprintln(writer)

	fmt.Fprintln(writer, "## Emojis that differ between Ecoji V1 and V2")
	fmt.Fprintln(writer)

	fmt.Fprintln(writer, "Ordinal | V1 codepoint | V1 emoji | V2 codepoint | V2 emoji")
	fmt.Fprintln(writer, "-|-|-|-|-")
	for i, r := range emojisV1 {
		if emojisV2[i] != r {
			fmt.Fprintf(writer, "%d | %U | %s | %U | %s\n", i, r, string(r), emojisV2[i], string(emojisV2[i]))
		}
	}

	fmt.Fprintln(writer)
	fmt.Fprintln(writer, "## Emojis that are same in Ecoji V1 and V2")
	fmt.Fprintln(writer)
	fmt.Fprintln(writer, "Ordinal | codepoint | emoji ")
	fmt.Fprintln(writer, "-|-|-")
	for i, r := range emojisV1 {
		if emojisV2[i] == r {
			fmt.Fprintf(writer, "%d | %U | %s \n", i, r, string(r))
		}
	}

	fmt.Fprintln(writer)
	fmt.Fprintln(writer, "## Emojis use for padding")
	fmt.Fprintln(writer)
	fmt.Fprintln(writer, "Type | codepoint V1 | emoji V1 | codepoint V1 | emoji V2 ")
	fmt.Fprintln(writer, "-|-|-|-|-")

	fmt.Fprintf(writer, "FILL | %U | %s | %U | %s\n", padding, string(padding), padding, string(padding))
	for i, r := range paddingLastV1 {
		fmt.Fprintf(writer, "PAD_%d | %U | %s | %U | %s\n", i, r, string(r), paddingLastV2[i], string(paddingLastV2[i]))
	}

}
